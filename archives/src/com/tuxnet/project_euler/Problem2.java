package com.tuxnet.project_euler;

// https://projecteuler.net/problem=2
/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

import java.util.ArrayList;
import java.util.List;

public class Problem2 {

    private static Fibonacci fibonacciNumbers = new Fibonacci();

    public static void solve() {
        int result = 0;
        int range = 4 * 1000000;
        List<Integer> list = getEven(fibonacciNumbers.getFromRange(range));

        for (int evenFibonacci : list) {
            result += evenFibonacci;
        }

        System.out.println("The sum of the even-valued terms in the Fibonacci sequence in range " + range + " equals: " + result);
    }

    private static List<Integer> getEven(List<Integer> list) {
        List<Integer> evenNumbers = new ArrayList<>();

        for (int number : list) {
            if (number % 2 == 0) evenNumbers.add(number);
        }
        //System.out.println(evenNumbers);
        return evenNumbers;
    }
}
